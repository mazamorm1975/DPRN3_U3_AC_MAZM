<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxASEBUQEBAVFRUVFQ8VGBYVFRAWFRUVGBUXFxUVFRUY
        HSggGBolHRUVITEhJikrLi4uFx8zODMtNygtLiv/2wBDAQoKCg4NDhoQEBstJSAlLS0uMC0tLSstLS4t
        LS4tLTAtLS0tLS0tLS8tLS0tKystLS0tLS0tLS0tLS0tLS0tLS3/wAARCADUAO0DASIAAhEBAxEB/8QA
        HAAAAgIDAQEAAAAAAAAAAAAAAAECAwQGBwUI/8QAThAAAQIDAwYJCQYDBgQHAAAAAQACAxExIUFRBAUS
        IjJhBgczQnGBkaHBExQXI1JiktPwU2Nyc7HhgqKzQ1Sj0dLxJDSDkxUWJWSywsP/xAAbAQABBQEBAAAA
        AAAAAAAAAAAAAQIDBAUGB//EADkRAAIBAwEFBAkDAwQDAAAAAAABAgMEERIFITFBURMUcZEGMlJhgbHB
        0fAioeFicrIzNELSFRYk/9oADAMBAAIRAxEAPwDsvKWmyXXP6knt61NG7G9B19rVl3/Uktu02SoMUAG3
        r00bsZWo2temjdjK1Pa1jYRQY3pbWubCKDGVqADa9ZSV2Mt6dfWYXfuiuubCLsZJV9ZeOagA+9/l7qo+
        9/l7qp/eX+z3JfeX+z3IAdPWY3d1UU9ZWd2E96VPWXnmopri0m7BAC2fWV0rsJ2+Clsa9dK7CdqWzri0
        mownasXOWXQ8mhPyiK4BrRN07p3DEkyAF5KBUm3hEsuy2Fk8N0aM9rWVJcZAbt5ukLSuY5740Yhc5mb4
        cm2jyrwCekDZb16XQFq/CnhFFzhGLnEtgtLtCHOyWJxJvPUF5IwCzq1284gdjsz0fgoqpc7305L7/Hd4
        8T043CfObjN2WxGn7t72DsZILLzdw3zpBIIyjyjb2xQHF3STrdjprwEKr20+puy2ZaSjpdOPkjr/AAS4
        w8nygiDGHkYziAASNAk2SBOydx6ASt32dSulfhOxfNERgdXtXSOLfhu6YyDLHaxIbCiONZiQhk37j1YK
        9QutT0yOV2tsJ0E6tDfHmunhz+HE6fs+rrO/CdlEU9Xjf+yWzqC0G/CadPV3G9XTmhfdfzd9Efdfzd9E
        fd3e13o+7u9rvQA6+rwv76Ir6ukr/wBkq+ru9rvTrqGwC/FAEdr1dNG/GVnintalNG/GViNrUNgFDjKx
        G1qGwChxlYgB7erTRvxuQfWWGyXeg6+qbAKHG5I69jrJd6ADlK6suuc/9kT06iUutM6+1qy759PQlMvq
        JSQAtvb1ZUun29CltWusIoKT7Utrb1ZUun29SNq19hFBSfagA2tZ1hFBjfeltazrHCgxlaLE9rWdY4UF
        J4WHeius6xwoKTlaLDbVABXXNjhQY9VUV1ztDm/tVFdY2OFBjhZVKusdu5v7VQA/f53s91K0R7/O9nup
        WiXv8/2e6laI9/n+z3UrRADprja9n9qpU1xa41bh1VT94bfs/tVFNYWuNRhjZVABTWba41GE7TYuLcZf
        CHzrKTk0M+phOOlLnRLQ49FpaP4jeuhcP+EAyLJC9jpRoukxgmJtJGu8CurZ1lq4fBZoj3lSu6uFoR0/
        o7s9VZ94mty4ePN/RfHmickSTQs5I7OcsbkKSE0J2CLL6iUYzNL8VykmmvcyaL1xwzsvFvwn88ybycQ+
        uhSa83lpsD+myR3id626moNk8796L584N54dkeWMygT0HHQiNHOa7aHSZAje0Lv8CM1zWmG4OhPAcHi0
        EOEwQaSote3q9pH3nnW2bDulw9K/TLevqvt7sIs9zm+131oj3Ob7XfWlbEe5zPa760ql7nM9rvrStinM
        kfuc32u+tEq6hsaKOx66I9w7HtfvROuqbGijseuiACuqbGihxlYLUbWq6wChxlYEV1XWNFDjhbRKuq6x
        ooaTuFpsNiAGdax1gFDj2oOtY/VApdPtRtWPsAoaT7UbVj9UCl0+1AC29vVlS6fb0BOZdtasqXT7UbXK
        asqXTxr1Itdt2SpdPtQA9rlLJUun9WJVtfYRS6adeUsw8fBFeUsNyAFW19jhQY4d6K2uscKDHCzpTra+
        x13h3ora7buH6d6AFXWdY8UGOFifvHbuH7I3u27h+iN527ggA97n4ft0Je9z8O6nQjf/AGmH1uRv/tMP
        rcgB+8Nu8fskXS1gRpXg0AvO5PeNu8LReNbhD5DJjk0M+ujgh8jsw6E/xHV6NJNnJRi2ya3oSr1I048X
        +Z+HE57wyz4cty10QH1UPVYLZapNssSZnsFy8dRYyQkmViTk5yyeoWtvC2oqnHckgTSCaURvLyCEIQGQ
        STUShrIRlpeRvbMSK6hxScIS+E7IYp1oUy0mphzExP3SexwwXL1dkGXvyaPDyqHtMe2e8Uk7daQelOt6
        vZzyVdsWKu7dpcVvX5+bss+j/d5mP79KXu8zHvr0rEzTl8PKIEONCthRGhwNkxi07w6YO8FZe7+zx+t6
        2jzVpp4Y/dOxj+/SlXVOxcf3T3HYx+t6Nx2Lj+iBBV1XWNFDjhb0IrY6xooccLehG52xcf07porY/Z5p
        /TuQA62PsAoaTSOtylgFLpp127G3INvKWC767EAG1ylkqXTx8Epk7dmFydeUsw8fBKc+Usw8UAP83q8a
        dSX5leb9BH5vV406kfmV5v0EAH49rm+FLKpfj2+b4Usqn+Pa5vhSyqX49vm+FLKoAl+Lbu8N2KXTyl31
        RH4tu7wpZijp5S76ogA/qfXVRH9T66qI/qfXVRH9T66qIApyzKmQob4z3aOg1znk3NAmThRfPue87Pyz
        KomVPoSQxuDRYB1DvJK3zjez7JrcghnXfoujEXCrGHucehuK5u0SElm3lXfoR2no1s/TF3E+L4eH8vf5
        DUCU3lIKnFczpK0v+JIJqIK2/gNwQZl7YpdGLDDcwSDQ6YcCZ2ncVLGDm8Ip3FxTt6bqVHhL6mpIXVvR
        NC/vb/8Att/1I9EsL+9v/wC23/UpO7VOhQ/85Ze1+0vscpUStg4acH25BlDYLYpiaUOG7SLQ0glxEpA+
        4O1a8VE4uLwzSpVY1YKpDg+AMKlKaqerAVFJcy5QnlaWdA4o8/8Ak3uzdGdquJdDn7WiNUdIAMsQcV1X
        +n9ddV81eUcxzYsMlr2OY4EVEjMEdBE19AcF88tyzJmZQJBpEnNHMiDabjW0biFqWlXVHS+KOG9IbDsK
        3ax4S+f8/PPU9Xp5O76rVH4ti7w3o6eTu+q1R+LYu8N6tnOi/Fsc3wpbSaPx7HN8KW0R+LY5vhS2k0fj
        2Ob4UtogB/mbPN+huQfvKXfQ6kfmbPN+huQfvKXfQ6kAP83q8adSX5nVTroj83q8adSPzOqnXRADpylu
        HjTqSpylpuTpyls6Xyx8EqWPtJpfJACpY/a5vh3oODtvmn9O9Olj7XGhww70Usda40OGFvSgB7nbdx/R
        G47dxRSx23cf0tR7p27j+6ADd/aY/W5YGfM6Q8lyeJHibUNs97ibGtG8zA61n+7z8f36Fx/jYz75eO3I
        Yb5tgkmKRzn2gifutMulzsFHVqaItlyws3dV401w5+H88DTcoyt8eK/KYpm6I55nuJuwBoBcAFCaFXFd
        csRtyZ6jGEaNNJcERnMqwKtqsCkKeW97GF0/iRP/ADnTkv8A+q5gulcSb/WZSMRAPYX/AOamt/8AUX5y
        MzbP+xqfD/KJ1dCELVOBOKcbrp5wAwhQh3k+K0grbuNOJPOkQeyyAP5A7/7LUSsis81JeJ6Js5YtKS/p
        X3IlEM29KZUCo8ZLyk4tNFwW2cV+fvNsq81iH1MeVaNic07vZPS3Baix0wlFbMe8KJtKbpzyOv7WF3bu
        D5r8+59L7zsYfW9G87Fw/Ra1wB4RDLMjbEe6b4cocQXlwGq+XvC3p0sFsvvHYuH6WLcjJSWUeXVacqU3
        CXFbg3u2Lh+ndNG9+zzfDuRS11rDQYYWdCKWutaaDDDuSjANm3a2766EGzlLRd9diZstfaDQYJGzlLQa
        XyQAU5S3Dxp1IlLlLcPGidOUtnS+WPglKXKW4eKADZ5TWnS+Xb1I2bH2k0NZdqNjb1p0vl2o2bHWk0NZ
        dqACljrXGhrLC070U1XWuNDWU7BbWqNnVdaTQ1ldeg2arrXGhwnYLTvQAU1Ta40OGFtUU1Tt3O/eqKah
        tcaHDrqmLNQ7XtfvVAHh8Mc+tyLJHxTbE2WXziGct5AEydwXBGEnSe4kucS4kkkmdsyTU3rZeMTP3nmW
        GG104OT6TQbnmes7fMgAbmDFa4sm7q6pYXBHoHo9s/sKPaTX6pfLl+dcgscmdqnGdcohQQXM1688vT0J
        NUwoBWBOIAC6JxLu/wCIjjGG09jx/mueALfeJsnz2LgYDz1iJCl+pUtB4qRKG11myq+C+aOxoQhax58c
        F4zLc65R/wBAf4LFrBWx8YRnnPKDvA7GALXCFj1PXfiz0myX/wA1L+2P+KIlVuVpVZTCcTHSKvWMVdCd
        Z0Jk1zLFvPD0nvcCM/eY5a17+RjasQXWnaliDI9GkF3ifONrDQV6LKL5qiMmJLr3FZwi8vkogRHExIAD
        ZG3Sh2Bpl7uz8OKv2dXP6Gcp6S7P0tXEF7n9H9PiuhvFNZ1rTQYYWUolTWda00FZXiw7k6axtaaDCdos
        ols6zrWmgwnaLCr5yQ9m19oNBWXag6tr9YGl8u1B1bXWg0FZdqDq2v1gaXy7UAGzymtOl8sa9SLW7ds6
        Xy7Utjb1p0vljXpCci3a1p0vl2oANja1p03dvSjYsdaTQ4I5Ow2z7vqaNjVNulfggB7OqbSaHC5LZ1Da
        TQ4TsRsaht0r8J2I2dSulfhOxADpqG0m/Ca1PjI4QeZZG5jT62KHMab2tO28X2AyG9wwW0xIghghxAEi
        4uNgaJWk7hJcB4V55OWZY+NM+TZqwwbmtNhlcauO925QXFXs4Gtsewd3cJP1Y739F9+qTPJhMkJX3pud
        ITTVEd0zL2VjJamekTkqcN3giKmFWFYFMUETCk1IKQSD0Nb1xPOllz98CIP5oZ8Foq3TimfLOAGMKKP0
        PgpKP+pHxKW01m0q/wBrO1oQha550fPXDZ8845Sfvog7DLwXir1uFn/P5Sf/AHGUf1XLyViy9Z+J6bbr
        FKC/pj8kRKgVMqLkhIVlRa6RmpFQKUblrejKWdmHO78iyuHlLLQDJ7faaZAjspvAK8vJ3XK1zZiSii3C
        WS1VpwuaLjLgz6QyfKWOY2Ox2nDiNa5sqScJg9it2dc2g0GE7VzTii4Q6r8iinWh6RhzO0yrwOvXG5zs
        F0uejr10rsJ2rcpzU4qSPLru2lbVpUpcv3Qzq6xtBoML0jqWutnTd2onoaxt0rsL0E+TtNs+5PK4HU2t
        adN0unpRIsqZzRyddafdL/dEtCpnPqQAcnZXS6pfU0S0NWulfSVyY1Ka0+76mkBoWC2d+CADY1K6V+E7
        EbPq66V+E7KI2dUWh1+Fyxs4ZXDyeC+JEPq2tc9zsBKgF5wF5IQHHcjSuNjhAYEAZFCPrI9riLodJfxE
        S6A7FcnY2QksnOecn5VlETKolXOdIVDWiwAbgAB1KhYtxV1zPS9i2CtLdJ+s97+P5gjEfITWK1Sivmdz
        VEJILCJq1TXPdwRIKwKtSCUai4KQUGqYSD0NbXxXPlnOEMWxx2QyfBaotm4tnSzpA/6o7Ybwn0/XXiit
        fLNrVz7Ev8Wd5QhC2DzY+c+Ezp5blBxjRj2xCvMWVnV840U4viHtcVirEfE9QprEIr3ITlByk5VuKBWR
        KgUyolKNYpytWWDMTWGVbkz7dFNmsrJJb1NMtL4P5mbkeWxMnjw8pgmTmPaenecRKYO4lfQWZs5w48Bm
        VQrWxRPRvaec0nEEEdS+eFvHFLwg8jGdkTzZEm6HM/2mH8QHa0YqxZ1cPS+Zi+kmz+0p9vBb48fD83+f
        M67sa1dK6kr0uTtrpdUvqaZ1NYWzuwvS2LRbPuWocMPk98+qUv8AdLk75z6qIHq6a0+6X+6JBlLZ9yAA
        amzrTru7EDVsbaDU4diNnY1p1vl2daNmxloNTWXYgA2dVtoNThcuXcbufZluboLp2h8UjGWq0ywGsRva
        t/4Q52ZkeTRI5kQ1pkCdp5sY2YxMugTNy+fXx3xHvjRTpPiOcSTeCZn66FUu6umOlcWdB6P2Hb1u1l6s
        fn/HH4oQErFXlD5De5Wrz3v0jpfUlmQWWd1c1NEcLixhTCrCkpigiYUgohMFIPRaFa0qhpUwU0cWr3+A
        DpZzyf8AGR2iS14FZORZU+FEbFhGT2EODpAyIvkbCli8NMbXg6lKcFzTXmsH0whcG/8AP+df7z/hwf8A
        Sg8P86f3n/Dg/wClX++Q6M5H/wBbufbh5y/6mtPJLibyST0lJIpErPOzb3g4qtyCVBxSoYRKRQUilGMC
        qyVIqKUYzOhvmJpuc5pD2EhzCHNIqJGcxvEprDyWJIyud+qzpKFrSzQhJVqeH4M7zwQz4MryRmUNteZt
        iNHNiN2rBQGwjc4L29i1utOu7sXEeLfhAcjyvyTj6nKJNto13NPU46J3Oncu3bOxrE1vl2LYoVO0jk81
        2nZO0uHDlxXh0+HywIamxrTru7OlAaG7OtPrl2I2djWnW+WFOtFjdi2db5dimM8ezyds63y+rUhZYy0G
        prJMWcnbj4eK17hvn9uQZG6KwjTdpNhiusRtdDRM9QF6RtJZY+nTlUmoR4vcc841M+CPlPmUJ04cEnTt
        sdElov7Nnp0lpxUYYMpm0m0k1nvTc6QmViVajqTyeo7OtI2luoL4/coy2JZoe1+ixQh7pnSQFJGOFgq1
        anaTchhSCimgQmCpAqsJpBxYCpgqoFSBQOTLgVkZFk0SLEEOEwue4ya1omSa9krZ3SWHNdk4n8zMZkpy
        sgF8V0RrT7MNrpSHS5sz0NwT6VLtJYKl/eq0oupjL4Je/wDMv4HhZDxV5U9s40eHCJ5om8jc4iyfQSqM
        7cWOWQ2l8J7YwHNbNsTqa6w9s12hCvd1p4wcqtvXilnKx0wsff8Ac+XogIJa4EEEgggggiwgg0KgSujc
        cuZmsiQ8rYJeU0mvle5omHdJbpA/hC5oSqE4aJOJ11ndRuaMaq58uj5r85DJUCUEqJKaT5GSooJUUoxs
        EFE0kCCKz8niTbvbX/NYCnBi6Lt16SSyh9KpolnkzNis0hK+5ds4uOEHnWRtNYsPRhvnaTq6jz1Ag72u
        XFF7HA7PxyHLWxp+riasQWnVdKZljOTuoi9PtqmiXuKm3LHvNDMV+qO9fb4/PB33Z5O2db5YeKNGXJme
        N/RRJjhIGGdIEAk1EriO9OUuTtx8FrHnwx911+FetcJ4e59GW5YfJmcCDNrMHW2v/iI7AF0fjMz4MlyE
        thOk+MXQxKcw2Wu4TtpZZe8Li0JkhJUL2rhaEdX6NWGuTuJLhuX1+3mTWHlsTmD+JZUR8hpLzSVRprmd
        XeVcLQufy/kApBRTCnM0aaimkH5JApzUFIFIKOanNVzRNA7JOa71xT5S1+bIbRWG6Mx24l5eO54XA5rZ
        +BHC1+b4pOjpQXyD2TkbKOabnCZ3EEjAiWhNQnlmdta2nc2+mHFPK9+M7v3PohC1nIOHGbYrdIZUxuLY
        mo4bpGvVMLGzxxhZugNJEYRnXMhHSn0v2QOue4rQ7SHHKONVrXctCg89MM8HjtyxogQIPOc97+hoYW/q
        /uK4/Nepwmz9Fy7KDHiyE5NDRRrRPRYMakzvJK8mazqs9c2zttnW7treNOXHi/F/ZYXwGSlNKaU1GXcj
        SJQhA3IKKaEomRIKJpJUNyZeSxJiV4/RWPExJYLHyM1nAqKSwy3Sqao6X+I65xUcIXRoHmjj62CL5TdC
        nJtfZJl0Fq338vr8Kr5zzDnZ+R5VCyls9VzdIDnNNhb1ifXJfRECKHtD4Bm1wa6dxBE2kT3FadtU1Rw+
        Rw+2bLu9fVHhLf8AHn9/M5BxuZWImXw4LdmFDYZYPcS+f9LsWnLYeMcf+rxjKwtgkdHkoYs7COpa+s25
        31GdpsWKp2VNLon5rP1MTLzQdaxVmZeywHBYaWn6olzntWCEITyAaEkTQA01GaJowLklNOajNKaQXUTm
        iaSJpBckgUFRRNAuRzRNKaJoDI5pImlNKJkEImlNAmRpTQhKNBCEIAFk5O7VWMsiCJBJLgSUvWLHiwru
        nFplr42bYRB1oZfDdTmmbB1MLVwoldk4mmO/8PcaTjvOE/VwhMdYI6lPaevgyPSGKdspPlJfJniccOa9
        eFlrGnRkIT7BYQSWmzEFw/hGK5+DevovOGRQsphugvYCxwk9psneDZeCJg3GRXE+FPA7KMic58NrouTz
        mHtEywYPA2T3HdQF1QedaE2BtSCgreo8NcPf/K6eB4Cx4mSDmmSmIgKNJUllHTyUJ8SjzT3kea+8r5pz
        S6mRdjT/ABmP5rvR5r7yumiaXUxOxp/jKPNfeR5r7yvmiaNTE7GBR5tvR5t7yumhLqYnZQ6FHm29Pzf3
        lclNGWJ2cCrzc4o833q2aJoyxOziUebn2k/Nz7SumlNLlhoiVebnFLyBxV00TRlidnEp8gcUeQOKumlN
        GWHZxKvIHFHkDirZpzRlh2cSnyBxR5A4q6aU0ZYdnEgyEBvViU1KCxz3BsNrnlxkGtBJJwAFpKBf0xRG
        RJDQCSbABaTPAL6F4HZp82yKDAo5rZvt57jpOExWRMupajxecAXQnDKsrA8oCCyGbfJm5xlYHYC6tadH
        0tLZslW6fYr9vScd7OP21tCNxJUqbylxfJv6pb/F8Nyy3lNWysrSzBGVWFsrJoQrRhGuZ84HZvjPbp5K
        wF1TDnDNptJDCATvIK813FHm4kyfHAssDoMh0ThlNChqQjngaFrdV0mlOWFjm/eR9EObvbj/ABQPlI9E
        ObvtI/xQPlIQq+ldDS7zW9t+bD0Q5u9uP8UD5SPRDm724/xQPlIQjSugd5re2+PVh6Ic3faR/igfKR6I
        c3e3H+KB8pCEaV0DvNb235sBxQ5u+0j/ABQPlJ+iLN32kf4oHykIRpXQTvNb235sXoizd7cf4oHy0/RF
        m77SP8UD5aEI0roKrmtu/W/Ni9EWbvtI/wAUD5SPRFm77SP8UD5SaEaV0E7zW9t+bF6Is3faR/igfKT9
        EWbvtI/xQPlIQjSugd5re2/NgOKLN32mUfFA+Ul6Is3faZR8UD5SaEaY9Bruq3ty82L0Q5u+0j/FA+Wn
        6Is3faR/igfLQhGmPQd3mt7b82L0Q5u+0j/FA+Ug8UWbvtMo+KB8pCEaV0Elc1vbfmxniizd9pH+KB8p
        Hoizd9pH+KB8pCEaY9Be81vbfmyQ4rc2wxMiK+0bT2j/AODWrYsmzLkuSt/4aAyHZIlo1yMHP2j1lCFa
        owj0Mi7uKs5OMptro28Ho5TzZWVpZgjKbpWVokhSFU//2Q==
</value>
  </data>
</root>